{"version":3,"sources":["components/farmingTable/FarmingTable.jsx"],"names":["utils","harvest","TableContainer","styled","div","props","theme","style","mainBorder","panelBoxShadow","primaryFontColor","lightBackground","MainTableInner","scrollBarColor","MainTableRow","fonts","contentFont","MainTableHeader","headerFont","PanelTabContainerLeft","PanelTab","highlight","panelTabBoxShadow","buttonFontColor","panelTabLinkColor","columns","name","FarmingTable","useContext","HarvestContext","state","setState","getTotalFarmEarned","total","summaries","length","map","prettyPosition","summary","index","parseFloat","historicalRewards","totalFarmEarned","useEffect","timer","setTimeout","clearTimeout","darkTheme","lightTheme","display","NoAssetTable","className","col","i","key","address","String","isActive","onClick","reward","earnedRewards","console","log","minimumHarvestAmount","Math","floor","toFixed","stakedBalance","percentOfPool","unstakedBalance","usdValueOf"],"mappings":"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","file":"static/js/4.df22cfa0.chunk.js","sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport HarvestContext from \"../../Context/HarvestContext\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport harvest from \"../../lib/index\";\r\nimport { darkTheme, lightTheme, fonts } from \"../../styles/appStyles\";\r\n\r\nimport FarmTableSkeleton from \"./FarmTableSkeleton\";\r\n\r\nconst { utils } = harvest;\r\n\r\nconst TableContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%:\r\n  padding-bottom: 3rem;\r\n  border: ${(props) => props.theme.style.mainBorder};\r\n  box-shadow: ${(props) => props.theme.style.panelBoxShadow};\r\n  color: ${(props) => props.theme.style.primaryFontColor};\r\n  background-color: ${(props) => props.theme.style.lightBackground};\r\n  border-radius: .5rem;\r\n  border-top-left-radius: 0rem;\r\n  position: relative;\r\n  z-index: 50;\r\n`;\r\n\r\nconst MainTableInner = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  overflow-x: scroll;\r\n  scrollbar-color: ${(props) => props.theme.style.scrollBarColor}\r\n    ${(props) => props.theme.style.lightBackground};\r\n  scrollbar-width: thin;\r\n  ::-webkit-scrollbar {\r\n    width: 100%;\r\n    height: 0.8rem;\r\n    margin-top: -1.8rem;\r\n  }\r\n  ::-webkit-scrollbar-track:no-button {\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    background-color: ${(props) => props.theme.style.lightBackground};\r\n  }\r\n  ::-webkit-scrollbar-button {\r\n    color: ${(props) => props.theme.style.primaryFontColor};\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-color: black;\r\n    background-color: ${(props) => props.theme.style.scrollBarColor};\r\n  }\r\n`;\r\nconst MainTableRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 0.75fr 0.5fr 0.75fr 0.75fr 0.75fr 0.75fr 0.5fr;\r\n  font-size: 1.7rem;\r\n  font-family: ${fonts.contentFont};\r\n  padding: 1.5rem 1rem;\r\n  width: 100%;\r\n  border-bottom: 1.2px solid rgba(53, 53, 53, 0.15);\r\n  @media (max-width: 1920px) {\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 1280px) {\r\n    width: 110%;\r\n  }\r\n  // @media(max-width: 1100px) {\r\n  //   width: 160%;\r\n  // }\r\n  // @media(max-width: 800px) {\r\n  //   width: 175%;\r\n  // }\r\n  // @media(max-width: 710px) {\r\n  //   width: 250%;\r\n  // }\r\n  // @media(max-width:515px) {\r\n  //   width: 350%;\r\n  // }\r\n\r\n  div {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n  .name {\r\n  }\r\n  .active {\r\n  }\r\n  .earned-rewards {\r\n    cursor: pointer;\r\n    transition: scale 200ms ease;\r\n    border-radius: 0.5rem;\r\n    margin-right: 2rem;\r\n    &:hover {\r\n      width: 35%;\r\n      margin: 0 auto;\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n  .staked {\r\n  }\r\n  .pool {\r\n  }\r\n  .unstaked {\r\n    @media (max-width: 1280px) {\r\n      margin-left: 1.5rem;\r\n    }\r\n  }\r\n  .value {\r\n    margin-left: 1rem;\r\n    @media (max-width: 1280px) {\r\n      margin-left: 1.5rem;\r\n    }\r\n  }\r\n  .rewards-to-date {\r\n  }\r\n`;\r\nconst MainTableHeader = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 0.75fr 0.5fr 0.75fr 0.75fr 0.75fr 0.75fr 0.5fr;\r\n  grid-gap: 20px;\r\n  font-size: 2rem;\r\n  font-family: ${fonts.headerFont};\r\n  padding: 1.5rem 1rem;\r\n  border-bottom: 2px black solid;\r\n  width: 100%;\r\n  @media (max-width: 1280px) {\r\n    width: 110%;\r\n  }\r\n  // @media(max-width: 1920px) {\r\n  //   width: 100%;\r\n  // }\r\n  // @media(max-width: 1800px) {\r\n  //   width: 120%;\r\n  // }\r\n  // @media(max-width: 1100px) {\r\n  //   width: 160%;\r\n  // }\r\n  // @media(max-width: 800px) {\r\n  //   width: 175%;\r\n  // }\r\n  // @media(max-width: 710px) {\r\n  //   width: 250%;\r\n  // }\r\n  // @media(max-width:515px) {\r\n  //   width: 350%;\r\n  // }\r\n\r\n  p {\r\n    text-align: center;\r\n    width: 100%;\r\n\r\n    &:nth-child(8) {\r\n    }\r\n  }\r\n`;\r\n\r\nconst PanelTabContainerLeft = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst PanelTab = styled.div`\r\n  margin-right: 0.75rem;\r\n  border-radius: 1.2rem;\r\n  border-top: ${(props) => props.theme.style.mainBorder};\r\n  border-left: ${(props) => props.theme.style.mainBorder};\r\n  border-right: ${(props) => props.theme.style.mainBorder};\r\n  padding: 0.75rem 2rem 2rem 2rem;\r\n  background-color: ${(props) => props.theme.style.highlight};\r\n  box-shadow: ${(props) => props.theme.style.panelTabBoxShadow};\r\n  position: relative;\r\n  top: 1.2rem;\r\n  color: ${(props) => props.theme.style.buttonFontColor};\r\n\r\n  p {\r\n    color: ${(props) => props.theme.style.panelTabLinkColor};\r\n    text-decoration: none;\r\n    font-family: ${fonts.contentFont};\r\n    font-size: 2rem;\r\n    position: relative;\r\n    top: 0.1rem;\r\n    @media (max-width: 500px) {\r\n      font-size: 1.5rem;\r\n      top: 0.3rem;\r\n    }\r\n  }\r\n  @media (max-width: 605px) {\r\n    font-size: 1.9rem;\r\n    padding: 0.75rem 1rem 2.2rem 1rem;\r\n    position: relative;\r\n    top: 0.1rem;\r\n  }\r\n  @media (max-width: 550px) {\r\n    margin-right: 0.5rem;\r\n  }\r\n  @media (max-width: 380px) {\r\n    font-size: 1.5rem;\r\n    padding: 0.75rem 0.75rem 2rem 0.75rem;\r\n    position: relative;\r\n    margin-right: 0.5rem;\r\n    top: 0.5rem;\r\n    p {\r\n      top: 0.4rem;\r\n    }\r\n  }\r\n  @media (max-width: 333px) {\r\n    margin-right: 0.3rem;\r\n  }\r\n`;\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Profit Sharing Pool\",\r\n  },\r\n  {\r\n    name: \"Earns\",\r\n  },\r\n  {\r\n    name: \"Claimable\",\r\n  },\r\n  {\r\n    name: \"Staked\",\r\n  },\r\n  {\r\n    name: \"% of Pool\",\r\n  },\r\n  {\r\n    name: \"Unstaked\",\r\n  },\r\n  {\r\n    name: \"Value\",\r\n  },\r\n];\r\n\r\nconst FarmingTable = () => {\r\n  const { state, setState } = useContext(HarvestContext);\r\n  const getThisReward = (reward) => {\r\n    console.log(reward);\r\n    setState({ ...state, minimumHarvestAmount: reward });\r\n  };\r\n\r\n  const getTotalFarmEarned = () => {\r\n    let total = 0;\r\n    if (state.summaries.length !== 0) {\r\n      state.summaries.map(utils.prettyPosition).map((summary, index) => {\r\n        total += parseFloat(summary.historicalRewards);\r\n        setState({\r\n          ...state,\r\n          totalFarmEarned: (state.totalFarmEarned = total),\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.totalFarmEarned === 0) {\r\n      getTotalFarmEarned();\r\n    }\r\n  }, [state.summaries]);\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      getTotalFarmEarned();\r\n    }, 60000);\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={state.theme === \"dark\" ? darkTheme : lightTheme}>\r\n      {state.display ? (\r\n        <PanelTabContainerLeft>\r\n          <PanelTab>\r\n            <p>your staked assets</p>\r\n          </PanelTab>\r\n        </PanelTabContainerLeft>\r\n      ) : null}\r\n      {state.display ? (\r\n        <TableContainer>\r\n          {state.summaries.length === 0 ? (\r\n            <NoAssetTable>\r\n              <div className=\"header\">\r\n                <p>You currently are not staking any assets</p>\r\n              </div>\r\n              <div className=\"content\">\r\n                <div className=\"name\">\r\n                  {\" \"}\r\n                  <p>Stake assets to start earning!</p>{\" \"}\r\n                </div>\r\n              </div>\r\n            </NoAssetTable>\r\n          ) : (\r\n            <MainTableInner>\r\n              <MainTableHeader>\r\n                {columns.map((col, i) => {\r\n                  return (\r\n                    <p className={col.name} key={i}>\r\n                      {col.name}\r\n                    </p>\r\n                  );\r\n                })}\r\n              </MainTableHeader>\r\n              {state.summaries\r\n                .map(utils.prettyPosition)\r\n                .map((summary, index) => (\r\n                  <MainTableRow key={summary.address}>\r\n                    <div className=\"name\">{summary.name}</div>\r\n                    <div className=\"active\">{String(summary.isActive)}</div>\r\n                    <div\r\n                      className=\"earned-rewards\"\r\n                      onClick={() => getThisReward(summary.earnedRewards)}\r\n                    >\r\n                      {Math.floor(parseFloat(summary.earnedRewards)).toFixed(6)}\r\n                    </div>\r\n                    <div className=\"staked\">\r\n                      {parseFloat(summary.stakedBalance).toFixed(6)}\r\n                    </div>\r\n                    <div className=\"pool\">{summary.percentOfPool}</div>\r\n                    <div className=\"unstaked\">\r\n                      {parseFloat(summary.unstakedBalance).toFixed(6)}\r\n                    </div>\r\n                    <div className=\"value\">{summary.usdValueOf}</div>\r\n                  </MainTableRow>\r\n                ))}\r\n            </MainTableInner>\r\n          )}\r\n        </TableContainer>\r\n      ) : (\r\n        <FarmTableSkeleton state={state} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default FarmingTable;\r\n\r\nconst NoAssetTable = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .header {\r\n    font-size: 2rem;\r\n    font-family: ${fonts.headerFont};\r\n    padding: 1.5rem 1rem;\r\n    border-bottom: 2px black solid;\r\n    width: 100%;\r\n    p {\r\n      text-align: center;\r\n    }\r\n  }\r\n  .content {\r\n    width: 100%;\r\n    font-size: 1.7rem;\r\n    font-family: ${fonts.contentFont};\r\n    padding: 1.5rem 1rem;\r\n    width: 100%;\r\n    border-bottom: 1.2px solid rgba(53, 53, 53, 0.15);\r\n    p {\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}